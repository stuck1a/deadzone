###############################################################
###   DEAZONE ROADMAP FOR THE PACKAGE "deadzone.graphics"   ###
###############################################################

- Refactor font rendering (also fix all other shapes UV coords because we switched to stbi_set_flip_vertically_on_load = false)
  => Most important optimization: Pre-Calculate the normalized UV coordinates on font creation
  => They can be precalculated also for normalization within the global window space.
     But when doing so, then a logic is needed, which re-calculates these values of all existing IRenderables, whenever
     the window is resized.

  => Font Classes will be wrapped from FontFamily. FontFamily is used afterwards to set up a font for drawing and contains all
     variants like italic, bold and three base sizes of each font: small, medium, large
     Maybe use a separate Pen class to draw the text.
     Font drawing should then something like: drawText(FontFamily, x, y, text, italic, bold, size)
     Depending on the given size, the Pen or FontFamily class decides themself which base size variant it should use, to keep the scale
     value as small as possible (=better quality). It also need to calculate to proper scale value so that the rendered font is rendered
     in the given size (height) at the end.


- Implement vertex attributes for normal maps

- Implement loading and drawing of 3D objects (.obj files with vertex data, UV coordinates and normal map)

- ortho projection: Camera view is not yet 45Â° diagonal - fix as soon as textures/fonts are implemented, so that its easier to fix

- Read what function you have to execute in OpenGL for onResize to recalculate the window size
  and introduce a corresponding logic for this
