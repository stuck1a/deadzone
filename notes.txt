###############################################################
###   DEAZONE ROADMAP FOR THE PACKAGE "deadzone.graphics"   ###
###############################################################

- Implement font atlas creation, font texture creation and font drawing

- Implement vertex attributes for normal maps

- Implement loading and drawing of 3D objects (.obj files with vertex data, UV coordinates and normal map)

- ortho projection: Camera view is not yet 45Â° diagonal - fix as soon as textures/fonts are implemented, so that its easier to fix

- Read what function you have to execute in OpenGL for onResize to recalculate the window size
  and introduce a corresponding logic for this






Structure of the font definition JSON file:
// TODO: Really calculate the actual x,y positions of each glyph? Maybe we simply add for each glyph? Check Pro/Contra

{
  "atlas": "arial/Arial-10b.bmp",    // relative location of the font atlas
  "name": "Arial",    // will be used as identifier of the created Font asset
  "cells": {           // Describes the grid cells used in the atlas file
    "width": "24",
    "height": "27",
    "startChar": "31"    // ASCII value of the first character of the grid, so we know for each cell which character it represents - TODO: check if the JSON glyphs array comes ordered?
  },
  "style": {
    "width": "24",
    "height": "10",
    "antiAlias": true,
    "italic": false,
    "bold": true
  },
  "glyphs" : [
    {
      "id": "0",
      "width": "17",         // The actual width of the glyph within its cell
      "widthOffset": "0",    // TODO: Maybe we can make all offset values optional and simply set then to 0 if not given? This would shorten the definition file a lot
      "xOffset": "0",
      "yOffset": "0"
    },
    ...
  ]

}